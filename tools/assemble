set -e

MAJOR=`cat major.version`
MINOR=`cat minor.version`
VERSION="${MAJOR}_${MINOR}_$1"
TARGET="$2"

# clear previous installer
rm -rf artifacts

# create new payloads
mkdir -p artifacts
cp ./major.version artifacts/
cp ./minor.version artifacts/
cp ./tools/install_${TARGET} artifacts/install
cp ./tools/upgrade_${TARGET} artifacts/upgrade
cp ./app/target/app.war artifacts/
cp ./tools/renew.sh artifacts/
cp ./tools/backup.sh artifacts/
cp ./tools/synccert.sh artifacts/
cp ./tools/stat.sh artifacts/stat.sh
cp ./tools/setup.sql artifacts/
cp ./tools/check.sh artifacts/
cp ./tools/available.sh artifacts/
cp ./tools/ping.sh artifacts/
cp ./tools/port.sh artifacts/
cp ./tools/apt.sh artifacts/
cp ./tools/configure.sh artifacts/
cp ./tools/register.sh artifacts/
cp ./tools/certbot_renew.sh artifacts/
cp ./tools/add_challenge.sh artifacts/
cp ./tools/remove_challenge.sh artifacts/
cp ./tools/assign.sh artifacts/
cp ./tools/start.sh artifacts/
cp ./tools/portal.sh artifacts/
cp ./tools/garbage.sh artifacts/
cp ./tools/watch.sh artifacts/
cp ./tools/transcode.sh artifacts/
cp ./tools/schema/baseline.sql artifacts/
cp ./tools/schema/V01__noop.sql artifacts/
cp ./tools/schema/V02__messaging.sql artifacts/
cd artifacts
echo "$1" > build.version
tar cvf install.tar app.war transcode.sh watch.sh garbage.sh backup.sh renew.sh synccert.sh portal.sh configure.sh assign.sh register.sh certbot_renew.sh add_challenge.sh remove_challenge.sh start.sh ping.sh available.sh check.sh apt.sh port.sh stat.sh setup.sql baseline.sql V01__noop.sql V02__messaging.sql major.version minor.version build.version
md5sum install.tar > install.tar.md5

cd ..

# create installer
tar czf ./artifacts/installer.tgz -C artifacts install install.tar install.tar.md5
cat tools/decompress_install_${TARGET} artifacts/installer.tgz > ./artifacts/installer

# create upgrader
#tar czf ./artifacts/updater.tgz -C artifacts upgrade upgrade.tar upgrade.tar.md5
#cat tools/decompress_upgrade artifacts/updater.tgz > ./artifacts/upgrader

# export 
mv ./artifacts/installer ./export/${VERSION}_${TARGET}_coredb_install
#mv ./artifacts/upgrader ./export/${VERSION}_${TARGET}_coredb_upgrade

exit 0
